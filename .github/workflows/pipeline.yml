# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
    
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Compile with Maven
      run: mvn --batch-mode --update-snapshots compile

    - name: Test with Maven
      run: mvn --batch-mode --update-snapshots test

    - name: Build with Maven
      run: mvn -B --batch-mode --update-snapshots --file pom.xml verify

    - run: mkdir staging && cp target/*.jar staging

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - uses: actions/upload-artifact@v2
      with:
        name: Package
        path: staging
    
    - name: Get version for main branch
      if: github.ref == 'refs/heads/main'
      run: |
        VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
        echo "::set-output name=version::$VERSION"
      id: get_version_main

    - name: Get version for pull requests
      if: github.ref != 'refs/heads/main'
      run: |
        VERSION=${{github.event.number}}
        echo "::set-output name=version::$VERSION"
      id: get_version_pr

    - name: Get version
      run: |
        VERSION=${{ steps.get_version_pr.outputs.version }}
        if [ -z "$VERSION" ]
        then
              echo "\$VERSION is empty, we are in main branch"
              VERSION=${{ steps.get_version_main.outputs.version }}
        else
              echo "\$VERSION is NOT empty, we are in PR"
        fi
        echo "::set-output name=version::$VERSION"
      id: get_version

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get current time
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYYMMDD-HHMMSS
        utcOffset: "+01:00"

    - name: Build and push JVM image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./src/main/docker/Dockerfile.jvm
        push: true
        tags: |
          serrodcal/github-actions-maven-java-template:latest
          serrodcal/github-actions-maven-java-template:${{ steps.get_version.outputs.version }}
        labels: |
          DATETIME=${{ steps.current-time.outputs.formattedTime }}
    
